name: testing deployment workflows
on:
  deployment

jobs:
  get-deployment:
    runs-on: ubuntu-20.04
    steps:
      - name: Dump GitHub context
        id: deploy-environment  
        env:
          PAYLOAD: ${{ toJson(github.event.deployment.payload) }}
          ENVIRONMENT: ${{ github.event.deployment.environment }}
          ID: ${{ toJson(github.event.deployment.id) }}
        run: |
          echo ::set-output name=environment::$ENVIRONMENT
          echo ::set-output name=payload::$PAYLOAD
          echo ::set-output name=id::$ID
    outputs:
        PAYLOAD: ${{ steps.deploy-environment.outputs.payload }}
        ENVIRONMENT: ${{ steps.deploy-environment.outputs.environment }}
        ID: ${{ steps.deploy-environment.outputs.id}}
  Deploy-Production:
    needs: get-deployment
    runs-on: ubuntu-20.04
    if: ${{ needs.get-deployment.outputs.environment == 'production' }}
    steps:
      - name: set deployment status to in progress
        id: start_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ needs.get-deployment.outputs.id }}
          environment: ${{ needs.get-deployment.outputs.environment }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: in_progress
          mediaType: '{"previews": ["flash", "ant-man"]}'
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      - name: Run Deployment
        run: |
          echo "Production!"
          echo "${{ needs.get-deployment.outputs.environment }}"
          echo "${{ needs.get-deployment.outputs.id}}"
          echo "${{ needs.get-deployment.outputs.payload }}"
      
      - name: set deployment status to success
        id: successful_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ needs.get-deployment.outputs.id }}
          environment: ${{ needs.get-deployment.outputs.environment }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          mediaType: '{"previews": ["ant-man"]}'
          state: success
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: set deployment status to failure
        id: failed_deployment
        uses: octokit/request-action@v2.x
        if: failure()
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ needs.get-deployment.outputs.id }}
          environment: ${{ needs.get-deployment.outputs.environment }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          mediaType: '{"previews": ["ant-man"]}'
          state: failure
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      
  Deploy-Development:
    needs: get-deployment
    runs-on: ubuntu-20.04
    if: ${{ needs.get-deployment.outputs.environment == 'development' }}
    steps:
      - name: Run Deployment
        run: |
          echo "Development!"
          echo "${{ needs.get-deployment.outputs.id}}"
          echo "${{ needs.get-deployment.outputs.payload }}"